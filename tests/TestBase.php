<?php

declare(strict_types=1);

namespace Engine\Tests;

use DI\Container;
use DI\ContainerBuilder;
use OSM\Structures\Params\PlayerBuilderParams;
use PHPUnit\Framework\TestCase;
use OSM\Exceptions\EngineException;
use OSM\Services\PlayerBuilderService;
use OSM\Structures\Player;

abstract class TestBase extends TestCase
{
    /** @var Container */
    protected $container;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->container = ContainerBuilder::buildDevContainer();
    }

    /**
     * Creates standard player for tests in position
     *
     * @param string $pos
     * @param int $skill
     * @return Player
     * @throws EngineException
     * @throws \DI\DependencyException
     * @throws \DI\NotFoundException
     */
    public function getStandardPlayer(string $pos, int $skill = 100): Player
    {
        $params = $this->container->get(PlayerBuilderParams::class);
        $params->skill = $skill;
        $params->position = $pos;

        $player = $this->container->get(PlayerBuilderService::class)->buildPlayer($params);
        $player->perform(0);

        return $player;
    }
}